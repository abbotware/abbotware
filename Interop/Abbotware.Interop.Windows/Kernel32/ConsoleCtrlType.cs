// -----------------------------------------------------------------------
// <copyright file="ConsoleCtrlType.cs" company="Abbotware, LLC">
// Copyright © Abbotware, LLC 2012-2020. All rights reserved
// </copyright>
// -----------------------------------------------------------------------
// <author>Anthony Abate</author>

namespace Abbotware.Interop.Windows.Kernel32
{
    /// <summary>
    ///     An enumerated type for the control messages sent to the handler routine.
    /// </summary>
    public enum ConsoleCtrlType
    {
        /// <summary>
        ///     A CTRL+C signal was received, either from keyboard input or from a signal generated by the GenerateConsoleCtrlEvent
        ///     function.
        /// </summary>
        CtrlCEvent = 0,

        /// <summary>
        ///     A CTRL+BREAK signal was received, either from keyboard input or from a signal generated by
        ///     GenerateConsoleCtrlEvent.
        /// </summary>
        CtrlBreakEvent,

        /// <summary>
        ///     A signal that the system sends to all processes attached to a console when the user closes the console (either by
        ///     clicking Close on the console window's window menu, or by clicking the End Task button command from Task Manager).
        /// </summary>
        CloseEvent,

        /// <summary>
        ///     A signal that the system sends to all console processes when a user is logging off. This signal does not indicate
        ///     which user is logging off, so no assumptions can be made. Note that this signal is received only by services.
        ///     Interactive applications are terminated at logoff, so they are not present when the system sends this signal.
        /// </summary>
        LogOffEvent = 5,

        /// <summary>
        ///     A signal that the system sends when the system is shutting down. Interactive applications are not present by the
        ///     time the system sends this signal, therefore it can be received only be services in this situation. Services also
        ///     have their own notification mechanism for shutdown events. For more information, see Handler. This signal can also
        ///     be generated by an application using GenerateConsoleCtrlEvent.
        /// </summary>
        ShutdownEvent,
    }
}